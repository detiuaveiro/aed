==5783== Memcheck, a memory error detector
==5783== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5783== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==5783== Command: ./Tests 12
==5783== 

1) PersonCreate---

2) PersonSetCreate---
PersonSetSize(ps1) -> 0

3) PersonSetAdd---
ps1 -> {
(1, Maia, Eva, 1977-10-20);
(5, Matos, Filipe, 2001-01-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
(10, Santos, Sara, 2007-03-01);
}(size=6, capacity=8)
ps2 -> {
(4, Silva, Carlos, 1999-08-31);
(8, Costa, Olga, 1967-02-29);
(5, Matos, Filipe, 2001-01-01);
(9, Santos, Tiago, 1996-06-13);
(10, Santos, Sara, 2007-03-01);
}(size=5, capacity=8)
ps3 -> {
(8, Costa, Olga, 1967-02-29);
(5, Matos, Filipe, 2001-01-01);
(9, Santos, Tiago, 1996-06-13);
}(size=3, capacity=4)

4) PersonSetRemove---
id -> 5
p = PersonSetRemove(ps1, id) -> (5, Matos, Filipe, 2001-01-01)
ps1 -> {
(1, Maia, Eva, 1977-10-20);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
}(size=5, capacity=8)
ps1 -> {
(1, Maia, Eva, 1977-10-20);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
(5, Matos, Filipe, 2001-01-01);
}(size=6, capacity=8)
id -> 8
p = PersonSetRemove(ps1, id) -> NULL
id -> 8
p = PersonSetRemove(ps1, id) -> NULL
id -> 8
p = PersonSetRemove(ps1, id) -> NULL
id -> 1
p = PersonSetRemove(ps1, id) -> (1, Maia, Eva, 1977-10-20)
ps1 -> {
(5, Matos, Filipe, 2001-01-01);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
}(size=5, capacity=8)
ps1 -> {
(5, Matos, Filipe, 2001-01-01);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
(1, Maia, Eva, 1977-10-20);
}(size=6, capacity=8)

5) PersonSetPop---
PersonSetPop(ps3) -> (9, Santos, Tiago, 1996-06-13)
PersonSetPop(ps3) -> (5, Matos, Filipe, 2001-01-01)
PersonSetPop(ps3) -> (8, Costa, Olga, 1967-02-29)
ps3 -> {
}(size=0, capacity=4)

6) PersonSetGet / Contains---
id -> 3
PersonSetGet(ps1, id) -> NULL
PersonSetContains(ps1, id) -> 0
id -> 9
PersonSetGet(ps1, id) -> (9, Santos, Tiago, 1996-06-13)
PersonSetContains(ps1, id) -> 1
id -> 1
PersonSetGet(ps1, id) -> (1, Maia, Eva, 1977-10-20)
PersonSetContains(ps1, id) -> 1
id -> 5
PersonSetGet(ps1, id) -> (5, Matos, Filipe, 2001-01-01)
PersonSetContains(ps1, id) -> 1

7) PersonSetUnion/Intersection/Difference---
ps1 -> {
(5, Matos, Filipe, 2001-01-01);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
(1, Maia, Eva, 1977-10-20);
}(size=6, capacity=8)
ps2 -> {
(4, Silva, Carlos, 1999-08-31);
(8, Costa, Olga, 1967-02-29);
(5, Matos, Filipe, 2001-01-01);
(9, Santos, Tiago, 1996-06-13);
(10, Santos, Sara, 2007-03-01);
}(size=5, capacity=8)
ps4 = PersonSetUnion(ps1, ps2) -> {
(5, Matos, Filipe, 2001-01-01);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
(6, Oliveira, Carla, 1959-01-01);
(1, Maia, Eva, 1977-10-20);
(8, Costa, Olga, 1967-02-29);
}(size=7, capacity=8)
ps5 = PersonSetIntersection(ps1, ps2) -> {
(5, Matos, Filipe, 2001-01-01);
(10, Santos, Sara, 2007-03-01);
(9, Santos, Tiago, 1996-06-13);
(4, Silva, Carlos, 1999-08-31);
}(size=4, capacity=4)
ps6 = PersonSetIntersection(ps2, ps1) -> {
(4, Silva, Carlos, 1999-08-31);
(5, Matos, Filipe, 2001-01-01);
(9, Santos, Tiago, 1996-06-13);
(10, Santos, Sara, 2007-03-01);
}(size=4, capacity=4)
ps7 = PersonSetDifference(ps1, ps2) -> {
(6, Oliveira, Carla, 1959-01-01);
(1, Maia, Eva, 1977-10-20);
}(size=2, capacity=4)

8) PersonSetIsSubset/Equals---
PersonSetIsSubset(ps5, ps1) -> 1
PersonSetIsSubset(ps5, ps2) -> 1
PersonSetIsSubset(ps6, ps2) -> 1
PersonSetEquals(ps1, ps2) -> 0
PersonSetEquals(ps5, ps6) -> 1
==5783== 
==5783== HEAP SUMMARY:
==5783==     in use at exit: 0 bytes in 0 blocks
==5783==   total heap usage: 38 allocs, 38 frees, 4,986 bytes allocated
==5783== 
==5783== All heap blocks were freed -- no leaks are possible
==5783== 
==5783== For lists of detected and suppressed errors, rerun with: -s
==5783== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
